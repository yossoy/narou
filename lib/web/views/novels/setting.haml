-# このページ内専用のjavascriptでjQueryオブジェクトを参照したい場合この関数に記述
:javascript
  local_initialize_functions.push(function($) {
    var notification = new Narou.Notification();
    var stream_console = new Narou.Console(notification, {
      restore: false, buttons: false
    });
    var action = new Narou.Action(null);

    // 小説変換ボタン
    $("#console-dialog").on("shown.bs.modal", function() {
      action.convert("#{h @id}");
    });
    $("#btn-convert").on("click", function(e) {
      e.preventDefault();
      stream_console.clear();
      $("#console-dialog").modal();
    });

    // フォルダを開くボタン
    $("#btn-folder").on("click", function(e) {
      e.preventDefault();
      action.folder("#{h @id}");
    });

    var tooltip_opt = {
      animation: false,
      container: "body",
    };
    $("[data-toggle=tooltip]").tooltip(tooltip_opt);

    // セレクトボタン設定
    $(".selectpicker").selectpicker({
      container: "body",
      width: "100%"
    });
  });

%form(action="/novels/#{@id}/setting" method="POST")
  .navbar.navbar-default.navbar-fixed-top(role="navigation")
    .container
      .navbar-header
        %button.navbar-toggle(type="button")
          %span.sr-only Toggle navigation
          %span.icon-bar
          %span.icon-bar
          %span.icon-bar
        %a.navbar-brand(href="#" data-move-to="top") Narou.rb WEB UI
      .collapse.navbar-collapse
        %ul.nav.navbar-nav
          %li.active
            %a(href="/novels/#{@id}/setting") 小説設定
          %li
            %a(href="/") 戻る
        .navbar-form.navbar-left
          %input.btn.btn-info(type="submit" value="設定を保存" style="margin-left: 50px")
          %button#btn-convert.btn.btn-default この小説を変換
          %button#btn-folder.btn.btn-default フォルダを開く
        %p#queue-text.navbar-text.navbar-right(data-toggle="tooltip" title="キューに積まれた処理の数" data-placement="bottom")
          %span.glyphicon.glyphicon-inbox
          %span#queue 0

  .container.container-main.theme-showcase(role="main")
    %p.visible-xs-inline
      %input(type="submit" value="設定を保存" class="btn btn-info" style="float:none")

    %p.panel-settings-link
      goto <a href="#replace-panel" data-move-to="#replace-panel">置換設定</a>

    .container-settings
      #setting-panel.panel.panel-info.panel-settings
        .panel-heading <b>#{h @novel_title}</b> の変換設定
        .panel-body
          ・この小説専用の変換時の設定を変更出来ます（setting.ini を書き換えます）<br>
          ・変更を反映させるには再度変換を実行する必要があります<br>
          ・未設定の項目は、変換時に共通設定（default.* 系設定及びNarou.rbオリジナル設定）が適用されます<br>
          ・環境設定で force.* 系設定が有効になっている場合、ここでの該当項目は無視されます<br>
        .list-group
          - @original_settings.each do |original|
            - name = original[:name]
            - value = @novel_setting[name]
            - help = original[:help].strip.gsub("\n", "<br>")
            - list_group_item_style = {}
            - force_value = @force_settings[name]
            - if @error_list[name]
              - list_group_item_style = {class: "has-error", style: "background-color:#f2dede"}
            - elsif force_value.nil?.!
              - list_group_item_style = {style: "background-color: #fcf8e3"}
            .list-group-item.form-group{list_group_item_style}
              %h4.list-group-item-heading #{name}
              .list-group-item-text
                - case original[:type]
                - when :boolean
                  .switch-toggle.well.switch-3
                    <input id="#{name}-nil" type="radio" name="#{name}" value="nil" #{value.nil? ? "checked" : ""}>
                    %label(for="#{name}-nil")
                      未設定
                    <input id="#{name}-false" type="radio" name="#{name}" value="off" #{value == false ? "checked" : ""}>
                    %label(for="#{name}-false")
                      いいえ
                    <input id="#{name}-true" type="radio" name="#{name}" value="on" #{value ? "checked" : ""}>
                    %label(for="#{name}-true")
                      はい
                    %a.btn.btn-primary
                - when :select
                  %div.input-style
                    %select{name: name, class: "selectpicker show-tick"}
                      %option(value="") 未設定
                      - original[:select_keys].each_with_index do |key, index|
                        %option{selected: value == key, value: key}
                          = original[:select_summaries][index]
                - when :multiple
                  %div.input-style
                    %select{name: "#{name}[]", class: "selectpicker", multiple: true, title: "未設定"}
                      - selected_items = value.to_s.split(",")
                      - original[:select_keys].each_with_index do |key, index|
                        %option{selected: selected_items.include?(key), value: key}
                          = original[:select_summaries][index]
                - else
                  %input{type:"text", name:name, value:value, class:"form-control",
                         placeholder:Helper.variable_type_to_description(original[:type]).strip }
                %p #{help}
                .help-extra-messages
                  %p
                    未設定時：
                    - if @default_settings.include?(name)
                      = h value_to_msg(@default_settings[name])
                    - else
                      = h value_to_msg(original[:value])
                  - unless force_value.nil?
                    %p
                      %b force.#{name} が有効になっています（設定値：#{h value_to_msg(force_value)}）
                - if @error_list[name]
                  %p.alert-danger
                    &= @error_list[name]
                .clear

      %p.panel-settings-link
        goto <a href="#setting-panel" data-move-to="#setting-panel">変換設定</a>

      - replace_panel_var = { title: "<b>#{h @novel_title}</b> の置換設定",
        panel_class: "panel-info",
        body_class: "",
        body: ["・この小説の文章を置換する設定を行うことが出来ます（replace.txt を書き換えます）",
               "・変更を反映させるには再度変換を実行する必要があります",
               "・保存するとこの小説の replace.txt に書かれているコメントは削除されます"] }
      = haml :_edit_replace_txt, locals: { replace_panel_var: replace_panel_var }

      %input(type="submit" value="設定を保存" class="btn btn-info" style="float:none")

#console-dialog.modal.fade(tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true")
  .modal-dialog
    .modal-content
      .modal-header
        %button(type="button" class="close" data-dismiss="modal")
          %span(aria-hidden="true") &times;
          %span.sr-only Close
        %h4.modal-title サブコンソール
      .modal-body
        #console.console
      .modal-footer
        %button.btn.btn-primary(type="button" data-dismiss="modal") 閉じる
